//默认变量
@cell:12px;
@fsize:12px;



//方位集合
@direct-sets: {
    t:top;
    r:right;
    b:bottom;
    l:left;
};

//和模型集合
@box-sets: {
    m:margin;
    p:padding;
};

//排列方向集合
@combie-direct-sets:{
    v:top bottom;
    h:left right;
};




@font_zhenghei:"Microsoft JhengHei";
@font_yahei:"\5FAE\8F6F\96C5\9ED1", "Microsoft YaHei", "\9ED1\4F53", "\65B0\5B8B\4F53";
@font_songti:"\5B8B\4F53", "SimSun";
@font_xinst:"\65B0\5B8B\4F53", "NSimSun";
@font_heiti:"\9ED1\4F53", "SimHei";
@font_arial:"Arial";



//ie上需要垂直居中时候，字体大小和容器高度的比率
@ie7_vm_ratio:0.905;



._lh(@height){
    line-height: @height;
    height: @height;
}


.noselect{
    user-select: none;
}

@import "rule-utils";

@import (once) "vars";


.dib{display: inline-block;}

.db{display: block;}

.di{display: inline;}


.mdColorClass(){
    @ls:@colors-list;
    .loopColorList(@ls);
}


//微软雅黑 雅黑英文 黑体 新宋体
.ff-yh{   font-family: @font_yahei;}

//宋体
.ff-st{  font-family: @font_songti;}

//新宋体
.ff-xst{   font-family: @font_xinst;}

//黑体
.ff-ht{   font-family: @font_heiti;}

//简正黑
.ff-zh{ font-family: @font_zhenghei;}

//字符串截取
.txcut{ overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }

//不可选
.noselect{
    -moz-user-select:none;
    -webkit-user-select:none;
    -ms-user-select:none;
    -khtml-user-select:none;
    user-select:none;
}

//铺满到容器（一般用户fiex或者absolute定位）
.fillin{._fillin;}

.clear{font-size: 0; height: 0; width: 0; clear: both;}

.center {._mh(auto);}

.fs-reset{
    font-size: 0;
    >*{
        font-size: 1rem;
    }
}



.shortcutClass(){

    //宽度生成
    .ew{
        each(range(3, 30), {
            &.w@{value}{
                width:unit(@value, em) !important;
            }
        })
    }


    //一个类似表单布局的结构
    .form-gala{
        >.item{
            margin: 0.75em 0;
            display: flex;
            align-items: center;
            >.label{
                padding-right: 0.75em;
            }
            >.el{
                flex: 1;
            }
            .force{
                each(range(4, 24), {
                    &.w@{value}{
                        flex: unset;
                        flex-shrink: 0;
                        width:unit(@value + 0.5, em);
                    }
                })
            }
        }
        each(range(4, 21), {
            &.w@{value},&.lw@{value}{
                >.item{
                    >.label{
                        flex: unset;
                        width:unit(@value + 0.5, em);
                    }
                }
            }
        })
        &.label-right{
            .item{
                >.label{
                    text-align: right;
                }
            }
        }
    }


    .__class_write(bg-icon,     background-repeat background-position, no-repeat  ~"50% 50%");
    .__class_write(noselect,    -moz-user-select -webkit-user-select -ms-user-select -khtml-user-select user-select, none none none none none);

    .__class_write(txcut,    overflow -text-overflow white-space, hidden ellipsis nowrap);
    .__class_write_with_important(ib,          display, inline-block);
    .__class_write_with_important(db,          display, block);
    .__class_write_with_important(center,      margin-left margin-right,auto auto);

    // 不可见，但是仍可以加载
    .__class_write_with_important(v-hide,top left position clip clip, -50px -50px absolute rect(1px 1px 1px 1px)  rect(1px, 1px, 1px, 1px));

    //center
    .__class_write_with_important(center,margin-left margin-right,auto auto);


    //对其方式
    .__class_write_with_important(tr,text-align,right);
    .__class_write_with_important(tc,text-align,center);
    .__class_write_with_important(tl,text-align,left);


    .__class_write_with_important(pa,position,absolute);
    .__class_write_with_important(pr,position,relative);
    .__class_write_with_important(ps,position,static);

    .__class_write_with_important(db, display,block);
    .__class_write_with_important(di, display, inline);
    .__class_write_with_important(dib,display,inline-block);

    //
    .__class_write_with_important(cp,cursor,pointer);
    .__class_write_with_important(cd,cursor,default);

    .__class_write_with_important(bbox, box-sizing, border-box);
    .__class_write_with_important(cbox, box-sizing, content-box);

    //
    .__class_write_with_important(wnw, white-space, nowrap);
    .__class_write_with_important(wnn, white-space, normal);


    .__class_write_with_important(hide, display, none);

    .__class_write_with_important(bg-coveride, background-size, cover);
    .__class_write_with_important(background-size, background-size, contain);

    .__class_write_with_important(fit-cover, object-fit, cover);
    .__class_write_with_important(fit-contain, object-fit, contain);

    .__class_write_with_important(ts-late-x--50p, transform, translateX(-50%));
    .__class_write_with_important(ts-late-y--50p, transform, translateY(-50%));


    .__class_write(bd1px, border-width border-style, 1px solid);


    .flex{
        display: flex;
        align-items: center;
        justify-content: flex-start;

        &.inline{
            display: inline-flex;

            //修复inline的偏差
            &.fix{
                margin-top: -0.14em;
            }
        }

        &.column{       flex-direction      : column;  }

        &.jc{
            &-start     {justify-content    : flex-start; }
            &-center    {justify-content    : center;}
            &-end       {justify-content    : flex-end;}
            &-between   {justify-content    : space-between;  }
            &-around    {justify-content    : space-around;  }
        }
        &.between       {justify-content    : space-between;  }
        &.around        {justify-content    : space-around;  }

        &.ai{
            &-start      {align-items        : flex-start};
            &-center     {align-items        : center;}
            &-end        {align-items        : flex-end;}
            &-stretch    {align-items        : stretch;}
        }

        &.ac{
            &-start     {align-content      : flex-start;}
            &-center    {align-content      : center;}
            &-end       {align-content      : flex-end;}
            &-between   {align-content      : space-between;}
            &-around    {align-content      : space-around;}
            &-stretch   {align-content      : stretch;}
        }

        //flex-wrap设置
        &.wrap{
            &{flex-wrap: wrap;}
            &-rev{flex-wrap: wrap-reverse;}
            &-no{flex-wrap: nowrap;}
            &-in{flex-wrap: inherit;}
            &-un{flex-wrap: unset;}
        }
    }

    //align-self系列
    .as{
        &-start{align-self      : flex-start;}
        &-center{align-self     : center;}
        &-end{align-self        : flex-end;}
        &-stretch{align-self    : stretch;}
    }

    .fx1{ flex: 1;}
    .fx2{ flex: 2;}
    .fx3{ flex: 3;}
    .fx4{ flex: 4;}
    .fx5{ flex: 5;}

    .of{
        &.h     {overflow: hidden;}
        &.ya    {overflow-y: auto;}
        &.xa    {overflow-x: auto;}
    }

    each(range(0, 5), {
        .__class_write_with_important(~"h@{value}px", height , unit(@value, px));
        .__class_write_with_important(~"w@{value}px", height ,unit(@value, px));
        .__class_write_with_important(~"bt@{value}px", border-top-width ,unit(@value, px));
        .__class_write_with_important(~"br@{value}px", border-right-width , unit(@value, px));
        .__class_write_with_important(~"bb@{value}px", border-bottom-width , unit(@value, px));
        .__class_write_with_important(~"bl@{value}px", border-left-width , unit(@value, px));
        .__class_write_with_important(~"b@{value}px", border-width , unit(@value, px));
        .__class_write_with_important(~"s@{value}px", width height, unit(@value, px));
    })



    .__class_write_with_important(b-solid, brder-style, solid);
    .__class_write_with_important(b-dotted, brder-style, dotted);
    .__class_write_with_important(b-dashed, brder-style, dashed);
    .__class_write_with_important(b-double, brder-style, double);

    .__class_write_with_important(h-auto, height, auto);
    .__class_write_with_important(w-auto, width, auto);

    .__class_write_with_important(bg-size-cover, background-size, cover);
    .__class_write_with_important(bg-size-contain, background-size, contain);
    .__class_write_with_important(bg-size-100p, background-size, ~"100% 100%");


    //z的设置
    each(range(0, 5000, 100){
        .__class_write_with_important(~"z@{value}", z-index ,@value);
    })

    //border-raduis
    each(0 1 2 3 4 5 7 8 9,{
        .__class_write_with_important(~"bdr@{value}", border-radius ,unit(@value, px));
    })
    .__class_write_with_important(bdr50p, border-radius, 50%);


    //font-width
    each(range(100, 700, 100){
        .__class_write_with_important(~"fw@{value}", font-weight ,@value);
    })
    .__class_write_with_important(fw-auto, font-weight ,inherit);


    .toolkitGen(@gp, @value-list){
        @n:length(@value-list);

        //距离
        .write(@key,@value) when(@gp = "distance"){

            .__class_write_with_important(~"m@{key}",  margin, @value);
            .__class_write_with_important(~"mh@{key}", margin-left margin-right, @value @value);
            .__class_write_with_important(~"mv@{key}", margin-top margin-bottom, @value @value);
            .__class_write_with_important(~"ml@{key}", margin-left, @value);
            .__class_write_with_important(~"mt@{key}", margin-top, @value);
            .__class_write_with_important(~"mr@{key}", margin-right, @value);
            .__class_write_with_important(~"mb@{key}", margin-bottom, @value);

            .__class_write_with_important(~"p@{key}",  padding, @value);
            .__class_write_with_important(~"ph@{key}", padding-left padding-right, @value @value);
            .__class_write_with_important(~"pv@{key}", padding-top padding-bottom, @value @value);
            .__class_write_with_important(~"pl@{key}", padding-left, @value);
            .__class_write_with_important(~"pt@{key}", padding-top, @value);
            .__class_write_with_important(~"pr@{key}", padding-right, @value);
            .__class_write_with_important(~"pb@{key}", padding-bottom, @value);
        }

        //大小
        .write(@key,@value) when(@gp = "size"){
            .__class_write_with_important(~"fz@{key}",      font-size, @value);
            .__class_write_with_important(~"fz@{key}-rem",      font-size, unit(@value, rem));
            .__class_write_with_important(~"w@{key}",       width, @value);
            .__class_write_with_important(~"h@{key}",       height, @value);
            .__class_write_with_important(~"lh@{key}",      line-height, @value);
            .__class_write_with_important(~"ti@{key}",      text-indent, @value);
            //.__class_write_with_important(~"hgap@{key}",    height, @value);
            //.__class_write_with_important(~"vgap@{key}",    width display, @value inline-block);
        }

        //vwvh
        .write(@key,@value) when(@gp = "vwvh"){
            @kk:replace(~"@{value}", "\.", "d", "g");
            .__class_write_with_important(~"vw@{kk}",    width,   ~"@{value}vw");
            .__class_write_with_important(~"vh@{kk}",    height,  ~"@{value}vh");
        }


        .loop(@n)when(@n>0){
            @val:extract(@value-list,@n);

            //小于1且非百分比数字
            //乘以10,去掉小数点，前面加0
            .tranKey(@number)when(@val <  1)  and not(ispercentage(@val)){
                @valn:unit(@number * 10);
                @valn2:replace(~"0@{valn}","\.","","g");
                .write(@valn2,@val);
            }
            //大于1非百分比数字
            //乘以10,小数点换为d
            .tranKey(@number)when(@val >= 1) and not(ispercentage(@val)){
                @valn:unit(@number * 10);
                @valn2:replace(~"@{valn}","\.","d","g");
                .write(@valn2,@val);
            }

            //百分比
            .tranKey(@number)when(ispercentage(@val)){
                @valn:unit(@number);
                @valn2:replace(~"@{valn}","\.","d","g");
                @key:@valn2;
                @value:@val;
                .__class_write_with_important(~"w@{key}p",       width,  @value);
                .__class_write_with_important(~"h@{key}p",       height,  @value);
                .__class_write_with_important(~"l@{key}p",       left,  @value);
                .__class_write_with_important(~"t@{key}p",       top,  @value);
                .__class_write_with_important(~"r@{key}p",       right,  @value);
                .__class_write_with_important(~"b@{key}p",       bottom,  @value);
                //.__class_write_with_important(~"pl@{key}p",      padding-left, @value);
                //.__class_write_with_important(~"pt@{key}p",      padding-top, @value);
                //.__class_write_with_important(~"pr@{key}p",      padding-right, @value);
                //.__class_write_with_important(~"pb@{key}p",      padding-bottom, @value);
            }

            //offset
            .tranKey(@val) when(@gp="offset"){
                .__class_write_with_important(~"offset-x-@{val}",       left,  unit(@val,px));
                .__class_write_with_important(~"offset-y-@{val}",       top,   unit(@val,px));
            }

            .tranKey(@val);
            .loop(@n - 1);
        }
        .loop(@n)
    }


    @values:@size_range;

    //距离组   //.mt1.mb025
    .toolkitGen("distance", @values);

    //大小 //.fz075 fz95 fz10d5 w08 w15 w17d5 .scale09
    .toolkitGen("size", @values);

    //透明 .op01.op05.op10
    each(@opcity_range{
        @val:@value/100;
        @k: replace(
            .floatPadStarts(@value/10, 2)[@__],
            "\.", "d", "g"
        );
        //@k: .floatPadStarts(@value/10, 5)[@__];
        .__class_write_with_important(          ~"op@{k}",    opacity,  @val);
        .__class_write_with_important-hover(    ~"op@{k}",    opacity,  @val);
    })

    //scale08_5
    .eachRange(@scale_range, {
        @val:@value/100;
        @k: replace(
            .floatPadStarts(@value/10, 2)[@__],
            "\.", "d", "g"
        );
        .__class_write_with_important(          ~"scale@{k}",    transform,  ~"scale(@{val})");
        .__class_write_with_important-hover(    ~"scale@{k}",    transform,  ~"scale(@{val})");
    });


    /*缩放 .scale01.scale10*/
    //.toolkitGen("scale",0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.85 0.9 0.75 1 1.05 1.1 1.15 1.2 1.25 1.3 1.4 1.5 1.75 1.8 2 2.1 2.4 2.7 3.0 3 3.3);

    //百分比 .w100p.h33d33p.l33d33p.t100p.pt16d66p
    .toolkitGen("%",33.33% 100%);
    .toolkitGen("%",0% 5% 10% 15% 20% 25% 30% 35% 40% 45% 50% 55% 60% 65% 70% 75% 80% 85% 90% 95%);

    //vh,vw
    .toolkitGen("vwvh",0 10 12.5 20 25 30 33.33 35 36 50 66.66 75 80 90 100);

    //offset
    .toolkitGen("offset", range(-20,20,1));


    //m-auto,mh-auto等
    .__class_write_with_important(m-auto,margin,auto);
    .__class_write_with_important(mh-auto,margin-left margin-right,auto auto);
    .__class_write_with_important(mv-auto,margin-top margin-bottom,auto auto);
    .__class_write_with_important(ml-auto,margin-left,auto);
    .__class_write_with_important(mt-auto,margin-top,auto);
    .__class_write_with_important(mr-auto,margin-right,auto);
    .__class_write_with_important(mb-auto,margin-bottom,auto);



    //子元素填充
    .child-abs-fill{
        position: relative;
        >.child{
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
        }
    }
}


//::-webkit-scrollbar                滚动条整体部分
//::-webkit-scrollbar-thumb          滚动条里面的小方块，能向上向下移动（或向左向右移动）
//::-webkit-scrollbar-track          滚动条的轨道（里面装有Thumb）
//::-webkit-scrollbar-button         滚动条的轨道的两端按钮，由于通过点击微调小方块的位置。
//::-webkit-scrollbar-track-piece    内层轨道，滚动条中间部分
//::-webkit-scrollbar-corner         边角，即垂直滚动条和水平滚动条相交的地方
//::-webkit-resizer                  两个滚动条的交汇处上用于拖动调整元素大小的小控件
._sccollSett(@color:#425390, @width:5px){
    /* 设置滚动条的样式 */
    &::-webkit-scrollbar {
        width:@width;
        height: @width;
        margin-right: 10px;
    }
    /* 滚动槽 */
    &::-webkit-scrollbar-track {
        //-webkit-box-shadow:inset 0 0 6px @color;
        //border-radius:10px;
    }
    /* 滚动条滑块 */
    &::-webkit-scrollbar-thumb {
        border-radius:@width;
        background:@color;
        //-webkit-box-shadow:inset 0 0 6px @color;R
    }
    &::-webkit-scrollbar-thumb:window-inactive {
        //background:rgba(255,0,0,0.4);
    }
}

//.mdColorClass;
//.shortcutClass;


//

