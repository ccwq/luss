/**
参照js的String.prototype.padStrarts
@result:padStarts(foo, 5)[@__];
结果:00foo
 */
/**
针对浮点数优化的padStarts
@result:padStarts(foo, 5)[@__];
结果:00foo
 */
/**
 * 多个range使用
.eachRange(range(1,5) range(10,15), {
        hs:@value;
})
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  vertical-align: baseline;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 700;
}
/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  display: block;
}
body {
  line-height: 1;
  font-size: 12px;
}
ol,
ul {
  list-style: none;
}
blockquote,
q {
  quotes: none;
}
blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
i,
em {
  font-style: normal;
}
a {
  text-decoration: none;
}
.dib {
  display: inline-block;
}
.db {
  display: block;
}
.di {
  display: inline;
}
.noselect {
  user-select: none;
}
.ff-yh {
  font-family: "\5FAE\8F6F\96C5\9ED1", "Microsoft YaHei", "\9ED1\4F53", "\65B0\5B8B\4F53";
}
.ff-st {
  font-family: "\5B8B\4F53", "SimSun";
}
.ff-xst {
  font-family: "\65B0\5B8B\4F53", "NSimSun";
}
.ff-ht {
  font-family: "\9ED1\4F53", "SimHei";
}
.ff-zh {
  font-family: "Microsoft JhengHei";
}
.txcut {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
.noselect {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -khtml-user-select: none;
  user-select: none;
}
.fillin {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.clear {
  font-size: 0;
  height: 0;
  width: 0;
  clear: both;
}
.center {
  margin-left: auto;
  margin-right: auto;
}
.fs-reset {
  font-size: 0;
}
.fs-reset > * {
  font-size: 1rem;
}
.flex {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}
.flex.inline {
  display: inline-flex;
}
.flex.inline.fix {
  margin-top: -0.14em;
}
.flex.column {
  flex-direction: column;
}
.flex.jc-start {
  justify-content: flex-start;
}
.flex.jc-center {
  justify-content: center;
}
.flex.jc-end {
  justify-content: flex-end;
}
.flex.jc-between {
  justify-content: space-between;
}
.flex.jc-around {
  justify-content: space-around;
}
.flex.between {
  justify-content: space-between;
}
.flex.around {
  justify-content: space-around;
}
.flex.ai-start {
  align-items: flex-start;
}
.flex.ai-center {
  align-items: center;
}
.flex.ai-end {
  align-items: flex-end;
}
.flex.ai-stretch {
  align-items: stretch;
}
.flex.ac-start {
  align-content: flex-start;
}
.flex.ac-center {
  align-content: center;
}
.flex.ac-end {
  align-content: flex-end;
}
.flex.ac-between {
  align-content: space-between;
}
.flex.ac-around {
  align-content: space-around;
}
.flex.ac-stretch {
  align-content: stretch;
}
.flex.wrap {
  flex-wrap: wrap;
}
.flex.wrap-rev {
  flex-wrap: wrap-reverse;
}
.flex.wrap-no {
  flex-wrap: nowrap;
}
.flex.wrap-in {
  flex-wrap: inherit;
}
.flex.wrap-un {
  flex-wrap: unset;
}
.as-start {
  align-self: flex-start;
}
.as-center {
  align-self: center;
}
.as-end {
  align-self: flex-end;
}
.as-stretch {
  align-self: stretch;
}
.fx1 {
  flex: 1;
}
.fx2 {
  flex: 2;
}
.fx3 {
  flex: 3;
}
.fx4 {
  flex: 4;
}
.fx5 {
  flex: 5;
}
.of.h {
  overflow: hidden;
}
.of.ya {
  overflow-y: auto;
}
.of.xa {
  overflow-x: auto;
}
